steps:
  # Build the backend container
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/cx-futurist/api:${BUILD_ID}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/cx-futurist/api:latest'
      - '-f'
      - 'Dockerfile'
      - '.'
    id: 'build-backend'

  # Build the frontend container
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/cx-futurist/frontend:${BUILD_ID}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/cx-futurist/frontend:latest'
      - '-f'
      - 'frontend/Dockerfile'
      - './frontend'
    id: 'build-frontend'

  # Push the backend container
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', '${_REGION}-docker.pkg.dev/$PROJECT_ID/cx-futurist/api']
    waitFor: ['build-backend']

  # Push the frontend container
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', '${_REGION}-docker.pkg.dev/$PROJECT_ID/cx-futurist/frontend']
    waitFor: ['build-frontend']

  # Deploy backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'cx-futurist-api'
      - '--image=${_REGION}-docker.pkg.dev/$PROJECT_ID/cx-futurist/api:${BUILD_ID}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--port=8100'
      - '--allow-unauthenticated'
      - '--service-account=cx-futurist-sa@$PROJECT_ID.iam.gserviceaccount.com'
      - '--set-env-vars=API_HOST=0.0.0.0,CLOUD_RUN_PORT=8100'
      - '--set-secrets=OPENAI_API_KEY=openai-api-key:latest'
      - '--set-secrets=PINECONE_API_KEY=pinecone-api-key:latest'
      - '--set-secrets=PINECONE_ENVIRONMENT=pinecone-environment:latest'
      - '--set-secrets=TAVILY_API_KEY=tavily-api-key:latest'
      - '--cpu=2'
      - '--memory=2Gi'
      - '--timeout=3600'
      - '--max-instances=10'
    id: 'deploy-backend'
    waitFor: ['push-backend']

  # Get backend URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        BACKEND_URL=$(gcloud run services describe cx-futurist-api --region=${_REGION} --format='value(status.url)')
        echo "Backend URL: $${BACKEND_URL}"
        echo $${BACKEND_URL} > /workspace/backend_url.txt
    id: 'get-backend-url'
    waitFor: ['deploy-backend']

  # Deploy frontend to Cloud Run with backend URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        BACKEND_URL=$(cat /workspace/backend_url.txt)
        gcloud run deploy cx-futurist-frontend \
          --image=${_REGION}-docker.pkg.dev/$PROJECT_ID/cx-futurist/frontend:${BUILD_ID} \
          --region=${_REGION} \
          --platform=managed \
          --port=3000 \
          --allow-unauthenticated \
          --set-env-vars="NEXT_PUBLIC_API_URL=$${BACKEND_URL},NEXT_PUBLIC_WEBSOCKET_URL=$${BACKEND_URL/https/wss}" \
          --cpu=1 \
          --memory=512Mi \
          --max-instances=10
    id: 'deploy-frontend'
    waitFor: ['get-backend-url', 'push-frontend']

options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: '100'

timeout: '1800s'  # 30 minutes